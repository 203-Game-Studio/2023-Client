#pragma kernel ViewPortCulling

uint instanceCount;
StructuredBuffer<float4x4> localToWorldMatrixBuffer;
float4 planes[6];
AppendStructuredBuffer<float4x4> cullResult;

bool IsOutsideThePlane(float4 plane, float3 pointPosition)
{
    return dot(plane.xyz, pointPosition) + plane.w > 0;
}

[numthreads(640, 1, 1)]
void ViewPortCulling(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= instanceCount)
        return;
    float4x4 info = localToWorldMatrixBuffer[id.x];

    //TODO: 草碰撞盒，现在草默认是(0.5,0.5,0.5)大小，后续应该改成传进来
    float3 boundMin = float3(-0.25, 0, -0.25);
    float3 boundMax = float3(0.25, 0.5, 0.25);
    float4 boundVerts[8];//AABB8个顶点坐标
    boundVerts[0] = mul(info, float4(boundMin, 1));
    boundVerts[1] = mul(info, float4(boundMax, 1));
    boundVerts[2] = mul(info, float4(boundMax.x, boundMax.y, boundMin.z, 1));
    boundVerts[3] = mul(info, float4(boundMax.x, boundMin.y, boundMax.z, 1));
    boundVerts[4] = mul(info, float4(boundMax.x, boundMin.y, boundMin.z, 1));
    boundVerts[5] = mul(info, float4(boundMin.x, boundMax.y, boundMax.z, 1));
    boundVerts[6] = mul(info, float4(boundMin.x, boundMax.y, boundMin.z, 1));
    boundVerts[7] = mul(info, float4(boundMin.x, boundMin.y, boundMax.z, 1));

    //如果8个顶点都在某个面外，则肯定在视锥体外面
    for (int i = 0; i < 6; i++)
    {
        for (int j = 0; j < 8; j++)
        {
            float3 boundPosition = boundVerts[j].xyz;
            if (!IsOutsideThePlane(planes[i], boundPosition)) break;
            if (j == 7) return;
        }
    }
    cullResult.Append(info);
}