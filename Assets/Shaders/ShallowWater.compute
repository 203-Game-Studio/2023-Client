#pragma kernel Init
#pragma kernel Update

RWTexture2D<float> _HeightTexture1;
RWTexture2D<float> _HeightTexture2;
RWTexture2D<float> _HeightTexture;

uniform float _Damping;
uniform float _Alpha;
uniform float _Beta;

uniform float4 _ObjectPos;

[numthreads(8,8,1)]
void Init(uint2 id : SV_DispatchThreadID)
{
    float xPos = (_ObjectPos.x + 5.0) / 10.0 * 1024.0;
    float zPos = (_ObjectPos.z + 5.0) / 10.0 * 1024.0;
    float len = (id.x-ceil(xPos))*(id.x-ceil(xPos)) + (id.y-ceil(zPos))*(id.y-ceil(zPos));
    if(len < _ObjectPos.w * _ObjectPos.w){
        _HeightTexture[id.xy] = 1;
    }
}

[numthreads(8,8,1)]
void Update(uint2 id : SV_DispatchThreadID)
{
    float ht1 = _HeightTexture1[id.xy];
    float ht2 = _HeightTexture2[id.xy];
    if(id.x < 2)
    {
        _HeightTexture2[uint2(id.x - 1, id.y)] = ht2;
    }
    if(id.x > 1021)
    {
        _HeightTexture2[uint2(id.x + 1, id.y)] = ht2;
    }
    if(id.y < 2)
    {
        _HeightTexture2[uint2(id.x, id.y - 1)] = ht2;
    }
    if(id.y > 1021)
    {
        _HeightTexture2[uint2(id.x, id.y + 1)] = ht2;
    }

    int xDir[4] = {-1, 1, 0, 0};
    int yDir[4] = {0, 0, -1, 1};
    float hnt2 = 0;
    for(int i = 0; i < 4; ++i)
    {
        hnt2 += _HeightTexture2[uint2(id.x + xDir[i], id.y + yDir[i])];
    }
    _HeightTexture[id.xy] = _Damping * (ht2 + _Beta * (ht2 - ht1) + _Alpha * (hnt2 - 4 * ht2));
}